#include "uepch.h"
#include "Script/LuneExposer.h"

#include "Script/Lune/LuneModule.h"

#include "Math/Easing/EasingLua.h"
#include "Core/LogLua.h"

#include "Input/keyCodes.h"
#include "Input/gamePadCodes.h"
#include "Input/mouseCodes.h"

namespace UE
{
	UEResult ExposeCoreToLune(Ref<LuneStack> stack)
	{
		LuneModule Core("Core");
		Core
			.AddModule(LuneModule("Math")
				.AddModule(LuneModule("Easing")
					.AddFunction("EaseInBack", lua_EaseInBack)
					.AddFunction("EaseOutBack", lua_EaseOutBack)
					.AddFunction("EaseInOutBack", lua_EaseInOutBack)
					.AddFunction("EaseInBounce", lua_EaseInBounce)
					.AddFunction("EaseOutBounce", lua_EaseOutBounce)
					.AddFunction("EaseInOutBounce", lua_EaseInOutBounce)
					.AddFunction("EaseInCirc", lua_EaseInCirc)
					.AddFunction("EaseOutCirc", lua_EaseOutCirc)
					.AddFunction("EaseInOutCirc", lua_EaseInOutCirc)
					.AddFunction("EaseInCubic", lua_EaseInCubic)
					.AddFunction("EaseOutCubic", lua_EaseOutCubic)
					.AddFunction("EaseInOutCubic", lua_EaseInOutCubic)
					.AddFunction("EaseInElastic", lua_EaseInElastic)
					.AddFunction("EaseOutElastic", lua_EaseOutElastic)
					.AddFunction("EaseInOutElastic", lua_EaseInOutElastic)
					.AddFunction("EaseInExpo", lua_EaseInExpo)
					.AddFunction("EaseOutExpo", lua_EaseOutExpo)
					.AddFunction("EaseInOutExpo", lua_EaseInOutExpo)
					.AddFunction("EaseInQuad", lua_EaseInQuad)
					.AddFunction("EaseOutQuad", lua_EaseOutQuad)
					.AddFunction("EaseInOutQuad", lua_EaseInOutQuad)
					.AddFunction("EaseInQuart", lua_EaseInQuart)
					.AddFunction("EaseOutQuart", lua_EaseOutQuart)
					.AddFunction("EaseInOutQuart", lua_EaseInOutQuart)
					.AddFunction("EaseInQuint", lua_EaseInQuint)
					.AddFunction("EaseOutQuint", lua_EaseOutQuint)
					.AddFunction("EaseInOutQuint", lua_EaseInOutQuint)
					.AddFunction("EaseInSine", lua_EaseInSine)
					.AddFunction("EaseOutSine", lua_EaseOutSine)
					.AddFunction("EaseInOutSine", lua_EaseInOutSine)
				) // Easing

			) // Math

			.AddClass(LuneClass("Logger")
				.AddCtor("Create", lua_CreateLogger)
				.AddCtor("Get", lua_GetLogger)
				.Add("Trace", lua_LoggerTrace)
				.Add("Info", lua_LoggerInfo)
				.Add("Warn", lua_LoggerWarn)
				.Add("Error", lua_LoggerError)
				.Add("Critical", lua_LoggerCritical)
			) // Logger

			.AddModule(LuneModule("Input")
				.AddModule(LuneModule("Keyboard")
					.AddModule(LuneModule("Codes")
						.AddEnum("Space",			(UEUint16)KeyCode::Space)
						.AddEnum("Apostrophe",		(UEUint16)KeyCode::Apostrophe)
						.AddEnum("Comma",			(UEUint16)KeyCode::Comma)
						.AddEnum("Minus",			(UEUint16)KeyCode::Minus)
						.AddEnum("Period",			(UEUint16)KeyCode::Period)
						.AddEnum("Slash",			(UEUint16)KeyCode::Slash)
						.AddEnum("D0",				(UEUint16)KeyCode::D0)
						.AddEnum("D1",				(UEUint16)KeyCode::D1)
						.AddEnum("D2",				(UEUint16)KeyCode::D2)
						.AddEnum("D3",				(UEUint16)KeyCode::D3)
						.AddEnum("D4",				(UEUint16)KeyCode::D4)
						.AddEnum("D5",				(UEUint16)KeyCode::D5)
						.AddEnum("D6",				(UEUint16)KeyCode::D6)
						.AddEnum("D7",				(UEUint16)KeyCode::D7)
						.AddEnum("D8",				(UEUint16)KeyCode::D8)
						.AddEnum("D9",				(UEUint16)KeyCode::D9)
						.AddEnum("Semicolon",		(UEUint16)KeyCode::Semicolon)
						.AddEnum("Equal",			(UEUint16)KeyCode::Equal)
						.AddEnum("A",				(UEUint16)KeyCode::A)
						.AddEnum("B",				(UEUint16)KeyCode::B)
						.AddEnum("C",				(UEUint16)KeyCode::C)
						.AddEnum("D",				(UEUint16)KeyCode::D)
						.AddEnum("E",				(UEUint16)KeyCode::E)
						.AddEnum("F",				(UEUint16)KeyCode::F)
						.AddEnum("G",				(UEUint16)KeyCode::G)
						.AddEnum("H",				(UEUint16)KeyCode::H)
						.AddEnum("I",				(UEUint16)KeyCode::I)
						.AddEnum("J",				(UEUint16)KeyCode::J)
						.AddEnum("K",				(UEUint16)KeyCode::K)
						.AddEnum("L",				(UEUint16)KeyCode::L)
						.AddEnum("M",				(UEUint16)KeyCode::M)
						.AddEnum("N",				(UEUint16)KeyCode::N)
						.AddEnum("O",				(UEUint16)KeyCode::O)
						.AddEnum("P",				(UEUint16)KeyCode::P)
						.AddEnum("Q",				(UEUint16)KeyCode::Q)
						.AddEnum("R",				(UEUint16)KeyCode::R)
						.AddEnum("S",				(UEUint16)KeyCode::S)
						.AddEnum("T",				(UEUint16)KeyCode::T)
						.AddEnum("U",				(UEUint16)KeyCode::U)
						.AddEnum("V",				(UEUint16)KeyCode::V)
						.AddEnum("W",				(UEUint16)KeyCode::W)
						.AddEnum("X",				(UEUint16)KeyCode::X)
						.AddEnum("Y",				(UEUint16)KeyCode::Y)
						.AddEnum("Z",				(UEUint16)KeyCode::Z)
						.AddEnum("LeftBracket",		(UEUint16)KeyCode::LeftBracket)
						.AddEnum("Backslash",		(UEUint16)KeyCode::Backslash)
						.AddEnum("RightBracket",	(UEUint16)KeyCode::RightBracket)
						.AddEnum("GraveAccent",		(UEUint16)KeyCode::GraveAccent)
						.AddEnum("World1",			(UEUint16)KeyCode::World1)
						.AddEnum("World2",			(UEUint16)KeyCode::World2)
						.AddEnum("Escape",			(UEUint16)KeyCode::Escape)
						.AddEnum("Enter",			(UEUint16)KeyCode::Enter)
						.AddEnum("Tab",				(UEUint16)KeyCode::Tab)
						.AddEnum("Backspace",		(UEUint16)KeyCode::Backspace)
						.AddEnum("Insert",			(UEUint16)KeyCode::Insert)
						.AddEnum("Delete",			(UEUint16)KeyCode::Delete)
						.AddEnum("Right",			(UEUint16)KeyCode::Right)
						.AddEnum("Left",			(UEUint16)KeyCode::Left)
						.AddEnum("Down",			(UEUint16)KeyCode::Down)
						.AddEnum("Up",				(UEUint16)KeyCode::Up)
						.AddEnum("PageUp",			(UEUint16)KeyCode::PageUp)
						.AddEnum("PageDown",		(UEUint16)KeyCode::PageDown)
						.AddEnum("Home",			(UEUint16)KeyCode::Home)
						.AddEnum("End",				(UEUint16)KeyCode::End)
						.AddEnum("CapsLock",		(UEUint16)KeyCode::CapsLock)
						.AddEnum("ScrollLock",		(UEUint16)KeyCode::ScrollLock)
						.AddEnum("NumLock",			(UEUint16)KeyCode::NumLock)
						.AddEnum("PrintScreen",		(UEUint16)KeyCode::PrintScreen)
						.AddEnum("Pause",			(UEUint16)KeyCode::Pause)
						.AddEnum("F1",				(UEUint16)KeyCode::F1)
						.AddEnum("F2",				(UEUint16)KeyCode::F2)
						.AddEnum("F3",				(UEUint16)KeyCode::F3)
						.AddEnum("F4",				(UEUint16)KeyCode::F4)
						.AddEnum("F5",				(UEUint16)KeyCode::F5)
						.AddEnum("F6",				(UEUint16)KeyCode::F6)
						.AddEnum("F7",				(UEUint16)KeyCode::F7)
						.AddEnum("F8",				(UEUint16)KeyCode::F8)
						.AddEnum("F9",				(UEUint16)KeyCode::F9)
						.AddEnum("F10",				(UEUint16)KeyCode::F10)
						.AddEnum("F11",				(UEUint16)KeyCode::F11)
						.AddEnum("F12",				(UEUint16)KeyCode::F12)
						.AddEnum("F13",				(UEUint16)KeyCode::F13)
						.AddEnum("F14",				(UEUint16)KeyCode::F14)
						.AddEnum("F15",				(UEUint16)KeyCode::F15)
						.AddEnum("F16",				(UEUint16)KeyCode::F16)
						.AddEnum("F17",				(UEUint16)KeyCode::F17)
						.AddEnum("F18",				(UEUint16)KeyCode::F18)
						.AddEnum("F19",				(UEUint16)KeyCode::F19)
						.AddEnum("F20",				(UEUint16)KeyCode::F20)
						.AddEnum("F21",				(UEUint16)KeyCode::F21)
						.AddEnum("F22",				(UEUint16)KeyCode::F22)
						.AddEnum("F23",				(UEUint16)KeyCode::F23)
						.AddEnum("F24",				(UEUint16)KeyCode::F24)
						.AddEnum("F25",				(UEUint16)KeyCode::F25)
						.AddEnum("KP0",				(UEUint16)KeyCode::KP0)
						.AddEnum("KP1",				(UEUint16)KeyCode::KP1)
						.AddEnum("KP2",				(UEUint16)KeyCode::KP2)
						.AddEnum("KP3",				(UEUint16)KeyCode::KP3)
						.AddEnum("KP4",				(UEUint16)KeyCode::KP4)
						.AddEnum("KP5",				(UEUint16)KeyCode::KP5)
						.AddEnum("KP6",				(UEUint16)KeyCode::KP6)
						.AddEnum("KP7",				(UEUint16)KeyCode::KP7)
						.AddEnum("KP8",				(UEUint16)KeyCode::KP8)
						.AddEnum("KP9",				(UEUint16)KeyCode::KP9)
						.AddEnum("KPDecimal",		(UEUint16)KeyCode::KPDecimal)
						.AddEnum("KPDivide",		(UEUint16)KeyCode::KPDivide)
						.AddEnum("KPMultiply",		(UEUint16)KeyCode::KPMultiply)
						.AddEnum("KPSubstract",		(UEUint16)KeyCode::KPSubtract)
						.AddEnum("KPAdd",			(UEUint16)KeyCode::KPAdd)
						.AddEnum("KPEnter",			(UEUint16)KeyCode::KPEnter)
						.AddEnum("KPEqual",			(UEUint16)KeyCode::KPEqual)
						.AddEnum("LeftShift",		(UEUint16)KeyCode::LeftShift)
						.AddEnum("LeftControl",		(UEUint16)KeyCode::LeftControl)
						.AddEnum("LeftAlt",			(UEUint16)KeyCode::LeftAlt)
						.AddEnum("LeftSuper",		(UEUint16)KeyCode::LeftSuper)
						.AddEnum("RightShift",		(UEUint16)KeyCode::RightShift)
						.AddEnum("RightControl",	(UEUint16)KeyCode::RightControl)
						.AddEnum("RightAlt",		(UEUint16)KeyCode::RightAlt)
						.AddEnum("RightSuper",		(UEUint16)KeyCode::RightSuper)
						.AddEnum("Menu",			(UEUint16)KeyCode::Menu)
					) // Codes

				) // Keyboard

				.AddModule(LuneModule("Mouse")
					.AddModule(LuneModule("Codes")
						.AddEnum("B0",				(UEUint16)MouseCode::B0)
						.AddEnum("B1",				(UEUint16)MouseCode::B1)
						.AddEnum("B2",				(UEUint16)MouseCode::B2)
						.AddEnum("B3",				(UEUint16)MouseCode::B3)
						.AddEnum("B4",				(UEUint16)MouseCode::B4)
						.AddEnum("B5",				(UEUint16)MouseCode::B5)
						.AddEnum("B6",				(UEUint16)MouseCode::B6)
						.AddEnum("B7",				(UEUint16)MouseCode::B7)
						.AddEnum("Left",			(UEUint16)MouseCode::Left)
						.AddEnum("Right",			(UEUint16)MouseCode::Right)
						.AddEnum("Middle",			(UEUint16)MouseCode::Middle)
					) // Codes

				) // Mouse

				.AddModule(LuneModule("Gamepad")
					.AddModule(LuneModule("Codes")
						.AddEnum("A",				(UEUint16)GamepadCode::A)
						.AddEnum("B",				(UEUint16)GamepadCode::B)
						.AddEnum("X",				(UEUint16)GamepadCode::X)
						.AddEnum("Y",				(UEUint16)GamepadCode::Y)
						.AddEnum("LeftBumper",		(UEUint16)GamepadCode::LeftBumper)
						.AddEnum("RightBumper",		(UEUint16)GamepadCode::RightBumper)
						.AddEnum("Back",			(UEUint16)GamepadCode::Back)
						.AddEnum("Start",			(UEUint16)GamepadCode::Start)
						.AddEnum("Guide",			(UEUint16)GamepadCode::Guide)
						.AddEnum("LeftThumb",		(UEUint16)GamepadCode::LeftThumb)
						.AddEnum("RightThumb",		(UEUint16)GamepadCode::RightThumb)
						.AddEnum("DPadUp",			(UEUint16)GamepadCode::DPadUp)
						.AddEnum("DPadRight",		(UEUint16)GamepadCode::DPadRight)
						.AddEnum("DPadDown",		(UEUint16)GamepadCode::DPadDown)
						.AddEnum("DPadLeft",		(UEUint16)GamepadCode::DPadLeft)
						.AddEnum("Cross",			(UEUint16)GamepadCode::Cross)
						.AddEnum("Circle",			(UEUint16)GamepadCode::Circle)
						.AddEnum("Square",			(UEUint16)GamepadCode::Square)
						.AddEnum("Triangle",		(UEUint16)GamepadCode::Triangle)
						.AddEnum("LeftX",			(UEUint16)GamepadCode::LeftX)
						.AddEnum("LeftY",			(UEUint16)GamepadCode::LeftY)
						.AddEnum("RightX",			(UEUint16)GamepadCode::RightX)
						.AddEnum("RightY",			(UEUint16)GamepadCode::RightY)
						.AddEnum("LeftTrigger",		(UEUint16)GamepadCode::LeftTrigger)
						.AddEnum("RightTrigger",	(UEUint16)GamepadCode::RightTrigger)
					) // Codes

				) // Gamepad

			); // Input

		Core.RegisterSelf(stack);

		return UEResult::Success;
	}
}